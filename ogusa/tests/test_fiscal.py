import numpy as np
import pytest
from ogusa import fiscal
from ogusa.parameters import Specifications

S = 80
Y = np.append(np.array([
    1., 1.033, 1.067089, 1.10230294, 1.13867893, 1.17625534, 1.21507176,
    1.25516913, 1.29658971, 1.33937718, 1.38357662, 1.42923465,
    1.47639939, 1.52512057, 1.57544955, 1.62743939, 1.68114489,
    1.73662267, 1.79393122, 1.85313095, 1.91428427, 1.97745565, 2., 2.,
    2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
    2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
    2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
    2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
    2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
    2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
    2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
    2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
    2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
    2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
    2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
    2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
    2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
    2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
    2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
    2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
    2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,
    2., 2., 2., 2., 2., 2., 2.]), np.ones(S) * 2.)
T_H = np.append(np.array([
    0.09, 0.09297, 0.09603801, 0.09920726, 0.1024811, 0.10586298,
    0.10935646, 0.11296522, 0.11669307, 0.12054395, 0.1245219,
    0.12863112, 0.13287595, 0.13726085, 0.14179046, 0.14646954,
    0.15130304, 0.15629604, 0.16145381, 0.16678179, 0.17228558,
    0.17797101, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18, 0.18,
    0.18, 0.18, 0.18]), np.ones(S) * 0.18)
REVENUE = np.append(np.array([
    0.1, 0.1033, 0.1067089, 0.11023029, 0.11386789, 0.11762553,
    0.12150718, 0.12551691, 0.12965897, 0.13393772, 0.13835766,
    0.14292347, 0.14763994, 0.15251206, 0.15754496, 0.16274394,
    0.16811449, 0.17366227, 0.17939312, 0.18531309, 0.19142843,
    0.19774556, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2,
    0.2]), np.ones(S) * 0.2)
Gbaseline = np.array([
    0.05, 0.052683,  0.05442154, 0.05621745, 0.05807263, 0.05998902,
    0.06196866, 0.06401363, 0.06612608, 0.06830824, 0.07056241,
    0.07289097, 0.07529637, 0.07778115, 0.08034793, 0.08299941,
    0.08573839, 0.08856776, 0.09149049, 0.09450968, 0.1553477,
    0.15547224, 0.15017056, 0.14234988, 0.13531127, 0.12897652,
    0.12327524, 0.11814409, 0.11352606, 0.10936983, 0.10562922,
    0.10226267, 0.09923278, 0.09650588, 0.09405167, 0.09184288,
    0.08985496, 0.08806584, 0.08645563, 0.08500645, 0.08370218,
    0.08252833, 0.08147188, 0.08052106, 0.07966533, 0.07889517,
    0.07820203, 0.0775782, 0.07701676, 0.07651146, 0.07605669,
    0.07564739, 0.07527903, 0.0749475, 0.07464913, 0.07438059,
    0.07413891, 0.07392139, 0.07372563, 0.07354944, 0.07339087,
    0.07324816, 0.07311972, 0.07300412, 0.07290009, 0.07280645,
    0.07272218, 0.07264634, 0.07257808, 0.07251665, 0.07246136,
    0.0724116, 0.07236681, 0.07232651, 0.07229023, 0.07225758,
    0.0722282, 0.07220176, 0.07217796, 0.07215654, 0.07213726,
    0.07211991, 0.07210429, 0.07209024, 0.07207759, 0.07206621,
    0.07205596, 0.07204674, 0.07203844, 0.07203097, 0.07202425,
    0.0720182, 0.07201276, 0.07200786, 0.07200345, 0.07199948,
    0.0719959, 0.07199269, 0.0719898, 0.07198719, 0.07198485,
    0.07198274, 0.07198084, 0.07197913, 0.07197759, 0.07197621,
    0.07197496, 0.07197384, 0.07197283, 0.07197193, 0.07197111,
    0.07197037, 0.07196971, 0.07196911, 0.07196858, 0.0719681,
    0.07196766, 0.07196727, 0.07196692, 0.0719666, 0.07196632,
    0.07196606, 0.07196583, 0.07196562, 0.07196544, 0.07196527,
    0.07196512, 0.07196498, 0.07196486, 0.07196475, 0.07196465,
    0.07196456, 0.07196448, 0.0719644, 0.07196434, 0.07196428,
    0.07196423, 0.07196418, 0.07196414, 0.0719641, 0.07196406,
    0.07196403, 0.07196401, 0.07196398, 0.07196396, 0.07196394,
    0.07196392, 0.0719639, 0.07196389, 0.07196387, 0.07196386,
    0.07196385, 0.07196384, 0.07196383, 0.07196382, 0.07196382,
    0.07196381, 0.07196381, 0.0719638, 0.0719638, 0.07196379,
    0.07196379, 0.07196378, 0.07196378, 0.07196378, 0.07196378,
    0.07196377, 0.07196377, 0.07196377, 0.07196377, 0.07196377,
    0.07196376, 0.07196376, 0.07196376, 0.07196376, 0.07196376,
    0.07196376, 0.07196376, 0.07196376, 0.07196376, 0.07196376,
    0.07196376, 0.07196376, 0.07196376, 0.07196376, 0.07196376,
    0.07196376, 0.07196376, 0.07196376, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375, 0.07196375,
    0.07196375, 0.07196375, 0.07196375, 0.07196375])
D1 = np.append(np.array([
    0.59, 0.61623291, 0.64319598, 0.67091602, 0.69942066, 0.72873841,
    0.75889866, 0.78993172, 0.82186883, 0.85474225, 0.88858522,
    0.92343206, 0.95931814, 0.99627999, 1.03435529,
    1.07358289, 1.11400293, 1.15565679, 1.19858719, 1.24283823,
    1.28845541, 1.38932398, 1.48768626, 1.57891764, 1.66102587,
    1.73492329, 1.80143096, 1.86128786, 1.91515908, 1.96364317,
    2.00727885, 2.04655097, 2.08189587, 2.11370628, 2.14233565,
    2.16810209, 2.19129188, 2.21216269, 2.23094642, 2.24785178,
    2.2630666, 2.27675994, 2.28908395, 2.30017555, 2.310158,
    2.3191422, 2.32722798, 2.33450518, 2.34105466, 2.3469492,
    2.35225428, 2.35702885, 2.36132596, 2.36519337, 2.36867403,
    2.37180663, 2.37462596, 2.37716337, 2.37944703, 2.38150233,
    2.3833521, 2.38501689, 2.3865152, 2.38786368, 2.38907731,
    2.39016958, 2.39115262, 2.39203736, 2.39283362, 2.39355026,
    2.39419523, 2.39477571, 2.39529814, 2.39576833, 2.39619149,
    2.39657234, 2.39691511, 2.3972236, 2.39750124, 2.39775111,
    2.397976, 2.3981784, 2.39836056, 2.39852451, 2.39867206,
    2.39880485, 2.39892437, 2.39903193, 2.39912874, 2.39921586,
    2.39929428, 2.39936485, 2.39942836, 2.39948553, 2.39953697,
    2.39958328, 2.39962495, 2.39966245, 2.39969621, 2.39972659,
    2.39975393, 2.39977854, 2.39980068, 2.39982061, 2.39983855,
    2.3998547, 2.39986923, 2.39988231, 2.39989407, 2.39990467,
    2.3999142, 2.39992278, 2.3999305, 2.39993745, 2.39994371,
    2.39994934, 2.3999544, 2.39995896, 2.39996307, 2.39996676,
    2.39997008, 2.39997308, 2.39997577, 2.39997819, 2.39998037,
    2.39998233, 2.3999841, 2.39998569, 2.39998712, 2.39998841,
    2.39998957, 2.39999061, 2.39999155, 2.3999924, 2.39999316,
    2.39999384, 2.39999446, 2.39999501, 2.39999551, 2.39999596,
    2.39999636, 2.39999673, 2.39999705, 2.39999735, 2.39999761,
    2.39999785, 2.39999807, 2.39999826, 2.39999843, 2.39999859,
    2.39999873, 2.39999886, 2.39999897, 2.39999908, 2.39999917,
    2.39999925, 2.39999933, 2.39999939, 2.39999945, 2.39999951,
    2.39999956, 2.3999996, 2.39999964, 2.39999968, 2.39999971,
    2.39999974, 2.39999977, 2.39999979, 2.39999981, 2.39999983,
    2.39999985, 2.39999986, 2.39999988, 2.39999989, 2.3999999,
    2.39999991, 2.39999992, 2.39999993, 2.39999993, 2.39999994,
    2.39999995, 2.39999995, 2.39999996, 2.39999996, 2.39999996,
    2.39999997, 2.39999997, 2.39999997, 2.39999998, 2.39999998,
    2.39999998, 2.39999998, 2.39999998, 2.39999999, 2.39999999,
    2.39999999, 2.39999999, 2.39999999, 2.39999999, 2.39999999,
    2.39999999, 2.39999999, 2.39999999, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4]), np.ones(1) * 2.4)
G1 = np.array([
    0.05, 0.05165, 0.05335445, 0.05511515, 0.05693395,
    0.05881277, 0.06075359, 0.06275846, 0.06482949, 0.06696886,
    0.06917883, 0.07146173, 0.07381997, 0.07625603, 0.07877248,
    0.08137197, 0.08405724, 0.08683113, 0.08969656, 0.09265655,
    0.15230167, 0.15242377, 0.14722604, 0.13955871, 0.13265811,
    0.12644757, 0.12085808, 0.11582754, 0.11130006, 0.10722532,
    0.10355806, 0.10025752, 0.09728704, 0.09461361, 0.09220752,
    0.09004203, 0.0880931, 0.08633906, 0.08476042, 0.08333965,
    0.08206096, 0.08091013, 0.07987439, 0.07894222, 0.07810327,
    0.07734821, 0.07666866, 0.07605706, 0.07550663, 0.07501123,
    0.07456538, 0.07416411, 0.07380297, 0.07347794, 0.07318542,
    0.07292215, 0.0726852, 0.07247195, 0.07228003, 0.07210729,
    0.07195183, 0.07181192, 0.071686, 0.07157267, 0.07147067,
    0.07137887, 0.07129626, 0.0712219, 0.07115498, 0.07109475,
    0.07104055, 0.07099176, 0.07094786, 0.07090834, 0.07087278,
    0.07084077, 0.07081196, 0.07078604, 0.0707627, 0.0707417,
    0.0707228, 0.07070579, 0.07069048, 0.0706767, 0.0706643,
    0.07065314, 0.0706431, 0.07063406, 0.07062592, 0.0706186,
    0.07061201, 0.07060608, 0.07060074, 0.07059594, 0.07059161,
    0.07058772, 0.07058422, 0.07058107, 0.07057823, 0.07057568,
    0.07057338, 0.07057131, 0.07056945, 0.07056778, 0.07056627,
    0.07056491, 0.07056369, 0.07056259, 0.0705616, 0.07056071,
    0.07055991, 0.07055919, 0.07055854, 0.07055796, 0.07055743,
    0.07055696, 0.07055653, 0.07055615, 0.0705558, 0.07055549,
    0.07055521, 0.07055496, 0.07055474, 0.07055453, 0.07055435,
    0.07055418, 0.07055404, 0.0705539, 0.07055378, 0.07055367,
    0.07055358, 0.07055349, 0.07055341, 0.07055334, 0.07055327,
    0.07055322, 0.07055317, 0.07055312, 0.07055308, 0.07055304,
    0.070553, 0.07055297, 0.07055295, 0.07055292, 0.0705529,
    0.07055288, 0.07055286, 0.07055285, 0.07055283, 0.07055282,
    0.07055281, 0.0705528, 0.07055279, 0.07055278, 0.07055277,
    0.07055276, 0.07055276, 0.07055275, 0.07055274, 0.07055274,
    0.07055274, 0.07055273, 0.07055273, 0.07055273, 0.07055272,
    0.07055272, 0.07055272, 0.07055272, 0.07055272, 0.07055271,
    0.07055271, 0.07055271, 0.07055271, 0.07055271, 0.07055271,
    0.07055271, 0.07055271, 0.07055271, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527])
G2 = np.array([
    0.05, 0.052683,  0.05442154, 0.05621745, 0.05807263,
    0.05998902, 0.06196866, 0.06401363, 0.06612608, 0.06830824,
    0.07056241, 0.07289097, 0.07529637, 0.07778115, 0.08034793,
    0.08299941, 0.08573839, 0.08856776, 0.09149049, 0.09450968,
    0.15047587, 0.15078055, 0.14574715, 0.1382277, 0.1314602,
    0.12536945, 0.11988778, 0.11495427, 0.11051411, 0.10651797,
    0.10292144, 0.09968457, 0.09677138, 0.09414951, 0.09178983,
    0.08966612, 0.08775478, 0.08603457, 0.08448638, 0.08309301,
    0.08183898, 0.08071035, 0.07969459, 0.0787804, 0.07795763,
    0.07721714, 0.07655069, 0.07595089, 0.07541107, 0.07492524,
    0.07448798, 0.07409445, 0.07374028, 0.07342152, 0.07313464,
    0.07287644, 0.07264407, 0.07243493, 0.07224671, 0.07207731,
    0.07192485, 0.07178763, 0.07166414, 0.071553,  0.07145297,
    0.07136294, 0.07128192, 0.07120899, 0.07114336, 0.0710843,
    0.07103114, 0.07098329, 0.07094023, 0.07090148, 0.0708666,
    0.07083521, 0.07080696, 0.07078153, 0.07075865, 0.07073806,
    0.07071952, 0.07070284, 0.07068782, 0.07067431, 0.07066215,
    0.07065121, 0.07064135, 0.07063249, 0.07062451, 0.07061733,
    0.07061087, 0.07060505, 0.07059981, 0.0705951, 0.07059086,
    0.07058705, 0.07058361, 0.07058052, 0.07057774, 0.07057523,
    0.07057298, 0.07057095, 0.07056913, 0.07056748, 0.07056601,
    0.07056468, 0.07056348, 0.0705624, 0.07056143, 0.07056056,
    0.07055977, 0.07055906, 0.07055843, 0.07055785, 0.07055734,
    0.07055687, 0.07055646, 0.07055608, 0.07055574, 0.07055544,
    0.07055516, 0.07055492, 0.0705547, 0.0705545, 0.07055432,
    0.07055416, 0.07055401, 0.07055388, 0.07055376, 0.07055365,
    0.07055356, 0.07055347, 0.0705534, 0.07055333, 0.07055326,
    0.07055321, 0.07055316, 0.07055311, 0.07055307, 0.07055303,
    0.070553,  0.07055297, 0.07055294, 0.07055292, 0.0705529,
    0.07055288, 0.07055286, 0.07055284, 0.07055283, 0.07055282,
    0.0705528, 0.07055279, 0.07055278, 0.07055278, 0.07055277,
    0.07055276, 0.07055275, 0.07055275, 0.07055274, 0.07055274,
    0.07055274, 0.07055273, 0.07055273, 0.07055273, 0.07055272,
    0.07055272, 0.07055272, 0.07055272, 0.07055271, 0.07055271,
    0.07055271, 0.07055271, 0.07055271, 0.07055271, 0.07055271,
    0.07055271, 0.07055271, 0.07055271, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527,
    0.0705527, 0.0705527, 0.0705527, 0.0705527, 0.0705527])
D2 = np.append(np.array([
    0.59, 0.61623291, 0.6441788, 0.67289438, 0.70240813,
    0.73274937, 0.76394835, 0.79603625, 0.82904521, 0.86300841,
    0.89796003, 0.93393535, 0.97097075, 1.00910375, 1.04837308,
    1.08881867, 1.13048175, 1.17340484, 1.21763182, 1.26320798,
    1.31018004, 1.40887615, 1.50528321, 1.59475489, 1.6752794,
    1.74775146, 1.81297632, 1.87167869, 1.92451082, 1.97205974,
    2.01485376, 2.05336839, 2.08803155, 2.11922839, 2.14730555,
    2.172575, 2.1953175, 2.21578575, 2.23420717, 2.25078646,
    2.26570781, 2.27913703, 2.29122333, 2.30210099, 2.31189089,
    2.3207018, 2.32863162, 2.33576846, 2.34219162, 2.34797245,
    2.35317521, 2.35785769, 2.36207192, 2.36586473, 2.36927825,
    2.37235043, 2.37511539, 2.37760385, 2.37984346, 2.38185912,
    2.3836732, 2.38530588, 2.3867753, 2.38809777, 2.38928799,
    2.39035919, 2.39132327, 2.39219094, 2.39297185, 2.39367467,
    2.3943072, 2.39487648, 2.39538883, 2.39584995, 2.39626495,
    2.39663846, 2.39697461, 2.39727715, 2.39754944, 2.39779449,
    2.39801504, 2.39821354, 2.39839218, 2.39855297, 2.39869767,
    2.3988279, 2.39894511, 2.3990506, 2.39914554, 2.39923099,
    2.39930789, 2.3993771, 2.39943939, 2.39949545, 2.39954591,
    2.39959131, 2.39963218, 2.39966897, 2.39970207, 2.39973186,
    2.39975868, 2.39978281, 2.39980453, 2.39982407, 2.39984167,
    2.3998575, 2.39987175, 2.39988458, 2.39989612, 2.39990651,
    2.39991586, 2.39992427, 2.39993184, 2.39993866, 2.39994479,
    2.39995031, 2.39995528, 2.39995975, 2.39996378, 2.3999674,
    2.39997066, 2.39997359, 2.39997624, 2.39997861, 2.39998075,
    2.39998268, 2.39998441, 2.39998597, 2.39998737, 2.39998863,
    2.39998977, 2.39999079, 2.39999171, 2.39999254, 2.39999329,
    2.39999396, 2.39999456, 2.39999511, 2.3999956, 2.39999604,
    2.39999643, 2.39999679, 2.39999711, 2.3999974, 2.39999766,
    2.39999789, 2.3999981, 2.39999829, 2.39999846, 2.39999862,
    2.39999876, 2.39999888, 2.39999899, 2.39999909, 2.39999918,
    2.39999927, 2.39999934, 2.39999941, 2.39999946, 2.39999952,
    2.39999957, 2.39999961, 2.39999965, 2.39999968, 2.39999972,
    2.39999974, 2.39999977, 2.39999979, 2.39999981, 2.39999983,
    2.39999985, 2.39999986, 2.39999988, 2.39999989, 2.3999999,
    2.39999991, 2.39999992, 2.39999993, 2.39999993, 2.39999994,
    2.39999995, 2.39999995, 2.39999996, 2.39999996, 2.39999997,
    2.39999997, 2.39999997, 2.39999997, 2.39999998, 2.39999998,
    2.39999998, 2.39999998, 2.39999999, 2.39999999, 2.39999999,
    2.39999999, 2.39999999, 2.39999999, 2.39999999, 2.39999999,
    2.39999999, 2.39999999, 2.39999999, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4,
    2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4]), np.ones(1) * 2.4)


@pytest.mark.parametrize('baseline_spending, Y,T_H,REVENUE,Gbaseline,D_expected,G_expected',
                         [(False, Y, T_H, REVENUE, Gbaseline, D1, G1),
                          (True, Y, T_H, REVENUE, Gbaseline, D2, G2)],
                         ids=['baseline_spending = False',
                              'baseline_spending = True'])
def test_D_G_path(baseline_spending, Y, T_H, REVENUE, Gbaseline,
                  D_expected, G_expected):
    p = Specifications()
    new_param_values = {
        'T': 320,
        'S': 80,
        'debt_ratio_ss': 1.2,
        'tG1': 20,
        'tG2': 256,
        'alpha_T': 0.09,
        'alpha_G': 0.05,
        'rho_G': 0.1,
        'g_y_annual': 0.03,
        'budget_balance': False,
        'baseline_spending': baseline_spending
    }
    p.update_specifications(new_param_values, raise_errors=False)
    r_gov = np.ones(p.T + p.S) * 0.03
    p.g_n = np.ones(p.T + p.S) * 0.02
    D0 = 0.59
    G0 = 0.05
    dg_fixed_values = (Y, REVENUE, T_H, D0, G0)
    test_D, test_G = fiscal.D_G_path(r_gov, dg_fixed_values, Gbaseline,
                                     p)
    assert np.allclose(test_D, D_expected)
    assert np.allclose(test_G, G_expected)
